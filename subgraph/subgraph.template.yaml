specVersion: 0.0.2
description: Subgraph for the Ampleforth protocol contracts on ethereum
repository: https://github.com/ampleforth/ampleforth-core
schema:
  file: ./schema.graphql

dataSources:
  - kind: ethereum/contract
    name: CPIOracle
    network: "{{ network }}"
    source:
      abi: OracleABI
      address: "{{ cpiOracle }}"
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      abis:
        - name: OracleABI
          file: ../sdk/src/abis/MedianOracle.json
      entities:
        - MedianOracle
      callHandlers:
        - function: setReportDelaySec(uint256)
          handler: handleStorageUpdate
        - function: setReportExpirationTimeSec(uint256)
          handler: handleStorageUpdate
        - function: setMinimumProviders(uint256)
          handler: handleStorageUpdate
        - function: purgeReports()
          handler: handlePurgeReports
      eventHandlers:
        - event: ProviderReportPushed(indexed address,uint256,uint256)
          handler: handleProviderReportPushed
        - event: ProviderAdded(address)
          handler: handleAddProvider
        - event: ProviderRemoved(address)
          handler: handleRemoveProvider
      file: ./src/datasources/oracle.ts
      language: wasm/assemblyscript

  - kind: ethereum/contract
    name: CPIOracle_0
    network: "{{ network }}"
    source:
      abi: OracleABI
      address: "{{ prevCpiOracles.0 }}"
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      abis:
        - name: OracleABI
          file: ../sdk/src/abis/MedianOracle.json
      entities:
        - MedianOracle
      callHandlers:
        - function: setReportDelaySec(uint256)
          handler: handleStorageUpdate
        - function: setReportExpirationTimeSec(uint256)
          handler: handleStorageUpdate
        - function: setMinimumProviders(uint256)
          handler: handleStorageUpdate
        - function: purgeReports()
          handler: handlePurgeReports
      eventHandlers:
        - event: ProviderReportPushed(indexed address,uint256,uint256)
          handler: handleProviderReportPushed
        - event: ProviderAdded(address)
          handler: handleAddProvider
        - event: ProviderRemoved(address)
          handler: handleRemoveProvider
      file: ./src/datasources/oracle.ts
      language: wasm/assemblyscript

  - kind: ethereum/contract
    name: MarketOracle
    network: "{{ network }}"
    source:
      abi: OracleABI
      address: "{{ marketOracle }}"
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      abis:
        - name: OracleABI
          file: ../sdk/src/abis/MedianOracle.json
      entities:
        - MedianOracle
      callHandlers:
        - function: setReportDelaySec(uint256)
          handler: handleStorageUpdate
        - function: setReportExpirationTimeSec(uint256)
          handler: handleStorageUpdate
        - function: setMinimumProviders(uint256)
          handler: handleStorageUpdate
        - function: purgeReports()
          handler: handlePurgeReports
      eventHandlers:
        - event: ProviderReportPushed(indexed address,uint256,uint256)
          handler: handleProviderReportPushed
        - event: ProviderAdded(address)
          handler: handleAddProvider
        - event: ProviderRemoved(address)
          handler: handleRemoveProvider
      file: ./src/datasources/oracle.ts
      language: wasm/assemblyscript

  - kind: ethereum/contract
    name: Policy
    network: "{{ network }}"
    source:
      abi: PolicyABI
      address: "{{ monetaryPolicy }}"
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      abis:
        - name: PolicyABI
          file: ../sdk/src/abis/UFragmentsPolicy.json
      entities:
        - Policy
      callHandlers:
        - function: setDeviationThreshold(uint256)
          handler: handleStorageUpdate
        - function: setRebaseTimingParameters(uint256,uint256,uint256)
          handler: handleStorageUpdate
        - function: setRebaseFunctionLowerPercentage(int256)
          handler: handleStorageUpdate
        - function: setRebaseFunctionUpperPercentage(int256)
          handler: handleStorageUpdate
        - function: setRebaseFunctionGrowth(int256)
          handler: handleStorageUpdate
      eventHandlers:
        - event: LogRebase(indexed uint256,uint256,uint256,int256,uint256)
          handler: handleLogRebase
        - event: LogRebaseV2(indexed uint256,uint256,uint256,int256)
          handler: handleLogRebaseV2
      file: ./src/datasources/policy.ts
      language: wasm/assemblyscript

  - kind: ethereum/contract
    name: Token
    network: "{{ network }}"
    source:
      abi: TokenABI
      address: "{{ token }}"
      startBlock: {{ startBlock }}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      abis:
        - name: TokenABI
          file: ../sdk/src/abis/UFragments.json
      entities:
        - Token
      callHandlers:
        - function: setMonetaryPolicy(address)
          handler: handleStorageUpdate
      eventHandlers:
        - event: LogRebase(indexed uint256,uint256)
          handler: handleRebase
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleApproval
      file: ./src/datasources/token.ts
      language: wasm/assemblyscript

  # - kind: ethereum/contract
  #   name: XCController
  #   network: "{{ network }}"
  #   source:
  #     abi: XCControllerABI
  #     address: "{{ xcController }}"
  #     startBlock: {{ startBlock }}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.5
  #     abis:
  #       - name: XCControllerABI
  #         file: ../sdk/src/abis/XCController.json
  #       - name: XCTokenABI
  #         file: ../sdk/src/abis/XCToken.json
  #     entities:
  #       - XCController
  #     eventHandlers:
  #       - event: OwnershipTransferred(indexed address,indexed address)
  #         handler: handleStorageUpdate
  #       - event: GatewayRebaseReported(indexed address,indexed uint256,uint256,uint256)
  #         handler: handleStorageUpdate
  #       - event: LogRebase(indexed uint256,int256,uint256)
  #         handler: handleRebase
  #     file: ./src/datasources/xc_controller.ts
  #     language: wasm/assemblyscript

  # - kind: ethereum/contract
  #   name: XCToken
  #   network: "{{ network }}"
  #   source:
  #     abi: XCTokenABI
  #     address: "{{ xcToken }}"
  #     startBlock: {{ startBlock }}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.5
  #     abis:
  #       - name: XCTokenABI
  #         file: ../sdk/src/abis/XCToken.json
  #     entities:
  #       - XCToken
  #     eventHandlers:
  #       - event: OwnershipTransferred(indexed address,indexed address)
  #         handler: handleStorageUpdate
  #       - event: ControllerUpdated(address)
  #         handler: handleStorageUpdate
  #       - event: LogRebase(indexed uint256,uint256)
  #         handler: handleStorageUpdate
  #       - event: Transfer(indexed address,indexed address,uint256)
  #         handler: handleTransfer
  #       - event: Approval(indexed address,indexed address,uint256)
  #         handler: handleApproval
  #     file: ./src/datasources/xc_token.ts
  #     language: wasm/assemblyscript
