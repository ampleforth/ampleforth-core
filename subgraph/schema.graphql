type MedianOracle @entity {
  id: ID!
  address: Bytes!
  reportDelaySec: BigInt!
  reportExpirationTimeSec: BigInt!
  minimumProviders: BigInt!
  providers: [OracleProvider!]! @derivedFrom(field: "oracle")
  historicalReports: [OracleReport!]! @derivedFrom(field: "oracle")
}

type OracleProvider @entity {
  id: ID!
  address: Bytes!
  purged: Boolean!
  oracle: MedianOracle!
  reportCount: BigInt!
  report1: OracleReport
  report2: OracleReport
  historicalReports: [OracleReport!]! @derivedFrom(field: "provider")
}

type OracleReport @entity {
  id: ID!
  oracle: MedianOracle!
  provider: OracleProvider!
  report: BigDecimal!
  nonce: BigInt!
  timestamp: BigInt!
  purged: Boolean!
}

type Policy @entity {
  id: ID!
  token: [Token!]! @derivedFrom(field: "policy")
  address: Bytes!
  baseCPI: BigDecimal!
  rebaseLag: BigInt!
  deviationThreshold: BigDecimal!
  minRebaseTimeIntervalSec: BigInt!
  rebaseWindowOffsetSec: BigInt!
  rebaseWindowLengthSec: BigInt!
  lastRebase: Rebase
  historicalRebases: [Rebase!]! @derivedFrom(field: "policy")
}

type Rebase @entity {
  id: ID!
  policy: Policy!
  epoch: BigInt!
  timestamp: BigInt!
  supply: BigDecimal!
  previousSupply: BigDecimal!
  precentageChange: BigDecimal!
  supplyAdjustment: BigDecimal!
  targetRate: BigDecimal!
  marketRate: BigDecimal!
  cpi: BigDecimal!
}

type TokenBalance @entity {
  id: ID!
  token: Token!
  account: Bytes!
  value: BigDecimal!
  valueExact: BigInt!
}

type TokenApproval @entity {
  id: ID!
  token: Token!
  owner: Bytes!
  spender: Bytes!
  value: BigDecimal!
  valueExact: BigInt!
}

type Token @entity {
  id: ID!
  address: Bytes!
  policy: Policy!
  decimals: Int!
  name: String!
  symbol: String!
  balanceScalar: BigInt!
  totalSupply: BigDecimal!
  totalSupplyExact: BigInt!
  scaledTotalSupply: BigDecimal!
  scaledTotalSupplyExact: BigInt!
  scaledBalances: [TokenBalance!]! @derivedFrom(field: "token")
  approvals: [TokenApproval!]! @derivedFrom(field: "token")
}

