type MedianOracle @entity {
  id: ID!
  reportDelaySec: BigInt!
  reportExpirationTimeSec: BigInt!
  minimumProviders: BigInt!
  providers: [OracleProvider!]! @derivedFrom(field: "oracle")
  reports: [OracleReport!]! @derivedFrom(field: "oracle")
}

type OracleProvider @entity {
  id: ID!
  active: Boolean!
  address: Bytes!
  oracle: MedianOracle!
  reportCount: BigInt!
  activeReport1: OracleReport
  activeReport2: OracleReport
  reports: [OracleReport!]! @derivedFrom(field: "provider")
}

type OracleReport @entity {
  id: ID!
  oracle: MedianOracle!
  provider: OracleProvider!
  report: BigDecimal!
  nonce: BigInt!
  timestamp: BigInt!
  purged: Boolean!
}

type Policy @entity {
  id: ID!
  baseCPI: BigDecimal!
  rebaseLag: BigInt!
  deviationThreshold: BigDecimal!
  minRebaseTimeIntervalSec: BigInt!
  rebaseWindowOffsetSec: BigInt!
  rebaseWindowLengthSec: BigInt!
  lastRebase: Rebase
  rebases: [Rebase!]! @derivedFrom(field: "policy")
}

type Rebase @entity {
  id: ID!
  policy: Policy!
  epoch: BigInt!
  timestamp: BigInt!
  supply: BigDecimal!
  previousSupply: BigDecimal!
  precentageChange: BigDecimal!
  supplyAdjustment: BigDecimal!
  targetRate: BigDecimal!
  marketRate: BigDecimal!
  cpi: BigDecimal!
}
